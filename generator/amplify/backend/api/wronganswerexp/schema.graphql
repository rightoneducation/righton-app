type SavedExplanation @model 
@auth(
 rules: [
    { allow: public, provider: iam  },
  ]
)
{
  id: ID!
  question: String!
  correctAnswer: String!
  wrongAnswer: String!
  genExplanation: AWSJSON!
  discardedExplanations: AWSJSON
  version: String!
}

type DiscardedExplanation @model 
@auth(
 rules: [
    { allow: public, provider: iam },
  ]
)
{
  id: ID!
  question: String!
  explanation: String!
  reason: String
  discardText: String
  version: String!
}


type Questions @model 
@auth(
 rules: [
    { allow: public, provider: iam  },
  ]
)
{
  id: ID!
  question: String!
  correctAnswer: String!
  wrongAnswers: AWSJSON!
  version: String!
}

type RefinedData @model 
@auth(
 rules: [
   { allow: public, provider: iam  },
 ]
)
{
  id: ID!
  originalText: String!
  targetComplexity: String!
  pastAnalysis: String!
  refinedText: String!
  analysisData: String!
  assignedComplexity: String!
  finalReasoning: String!
  analysisDataExplanation: String!
  complexityMatchesTarget: Boolean!
  complexityMatchExplanation: String!
  promptContent: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}