## [Start] Set query expression for key **
#if( $util.isNull($ctx.args.id) && !$util.isNull($ctx.args.sortDirection) )
  $util.error("When providing argument 'sortDirection' you must also provide argument 'id'.", "InvalidArgumentsError")
#end
#set( $modelQueryExpression = {} )
## [Start] Validate key arguments. **
#if( !$util.isNull($ctx.args.orderGameSessionId) && $util.isNullOrBlank($ctx.args.id) )
  $util.error("When providing argument 'orderGameSessionId' you must also provide 'id'.", "InvalidArgumentsError")
#end
#if( !$util.isNull($ctx.args.orderGameSessionId) )
  #set( $sortKeyArgumentOperations = $ctx.args.orderGameSessionId.keySet() )
  #if( $sortKeyArgumentOperations.size() > 1 )
    $util.error("Argument orderGameSessionId must specify at most one key condition operation.", "InvalidArgumentsError")
  #end
  #foreach( $operation in $sortKeyArgumentOperations )
    #if( $operation == "between" )
      #if( $ctx.args.orderGameSessionId.between.size() != 2 )
        $util.error("Argument 'orderGameSessionId.between' expects exactly two elements.", "InvalidArgumentsError")
      #end
      #if( !$util.isNullOrBlank($ctx.args.orderGameSessionId.between[0].gameSessionId) && $util.isNullOrBlank($ctx.args.orderGameSessionId.between[0].order) )
        $util.error("When providing argument 'orderGameSessionId.between[0].gameSessionId' you must also provide 'orderGameSessionId.between[0].order'.", "InvalidArgumentsError")
      #end
      #if( !$util.isNullOrBlank($ctx.args.orderGameSessionId.between[1].gameSessionId) && $util.isNullOrBlank($ctx.args.orderGameSessionId.between[1].order) )
        $util.error("When providing argument 'orderGameSessionId.between[1].gameSessionId' you must also provide 'orderGameSessionId.between[1].order'.", "InvalidArgumentsError")
      #end
    #else
      #if( !$util.isNullOrBlank($ctx.args.orderGameSessionId.get("$operation").gameSessionId) && $util.isNullOrBlank($ctx.args.orderGameSessionId.get("$operation").order) )
        $util.error("When providing argument 'orderGameSessionId.$operation.gameSessionId' you must also provide 'orderGameSessionId.$operation.order'.", "InvalidArgumentsError")
      #end
    #end
  #end
#end
## [End] Validate key arguments. **
#if( !$util.isNull($ctx.args.id) )
  #set( $modelQueryExpression.expression = "#id = :id" )
  #set( $modelQueryExpression.expressionNames = {
  "#id": "id"
} )
  #set( $modelQueryExpression.expressionValues = {
  ":id": {
      "S": "$ctx.args.id"
  }
} )
#end
## [Start] Applying Key Condition **
#set( $sortKeyValue = "" )
#set( $sortKeyValue2 = "" )
#if( !$util.isNull($ctx.args.orderGameSessionId) && !$util.isNull($ctx.args.orderGameSessionId.beginsWith) )
#if( !$util.isNull($ctx.args.orderGameSessionId.beginsWith.order) ) #set( $sortKeyValue = "$ctx.args.orderGameSessionId.beginsWith.order" ) #end
#if( !$util.isNull($ctx.args.orderGameSessionId.beginsWith.gameSessionId) ) #set( $sortKeyValue = "$sortKeyValue#$ctx.args.orderGameSessionId.beginsWith.gameSessionId" ) #end
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND begins_with(#sortKey, :sortKey)" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "order#gameSessionId"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$sortKeyValue" }))
#end
#if( !$util.isNull($ctx.args.orderGameSessionId) && !$util.isNull($ctx.args.orderGameSessionId.between) )
  #if( $ctx.args.orderGameSessionId.between.size() != 2 )
    $util.error("Argument orderGameSessionId.between expects exactly 2 elements.")
  #end
#if( !$util.isNull($ctx.args.orderGameSessionId.between[0].order) ) #set( $sortKeyValue = "$ctx.args.orderGameSessionId.between[0].order" ) #end
#if( !$util.isNull($ctx.args.orderGameSessionId.between[0].gameSessionId) ) #set( $sortKeyValue = "$sortKeyValue#$ctx.args.orderGameSessionId.between[0].gameSessionId" ) #end
#if( !$util.isNull($ctx.args.orderGameSessionId.between[1].order) ) #set( $sortKeyValue2 = "$ctx.args.orderGameSessionId.between[1].order" ) #end
#if( !$util.isNull($ctx.args.orderGameSessionId.between[1].gameSessionId) ) #set( $sortKeyValue2 = "$sortKeyValue2#$ctx.args.orderGameSessionId.between[1].gameSessionId" ) #end
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey BETWEEN :sortKey0 AND :sortKey1" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "order#gameSessionId"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey0", { "S": "$sortKeyValue" }))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey1", { "S": "$sortKeyValue2" }))
#end
#if( !$util.isNull($ctx.args.orderGameSessionId) && !$util.isNull($ctx.args.orderGameSessionId.eq) )
#if( !$util.isNull($ctx.args.orderGameSessionId.eq.order) ) #set( $sortKeyValue = "$ctx.args.orderGameSessionId.eq.order" ) #end
#if( !$util.isNull($ctx.args.orderGameSessionId.eq.gameSessionId) ) #set( $sortKeyValue = "$sortKeyValue#$ctx.args.orderGameSessionId.eq.gameSessionId" ) #end
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey = :sortKey" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "order#gameSessionId"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$sortKeyValue" }))
#end
#if( !$util.isNull($ctx.args.orderGameSessionId) && !$util.isNull($ctx.args.orderGameSessionId.lt) )
#if( !$util.isNull($ctx.args.orderGameSessionId.lt.order) ) #set( $sortKeyValue = "$ctx.args.orderGameSessionId.lt.order" ) #end
#if( !$util.isNull($ctx.args.orderGameSessionId.lt.gameSessionId) ) #set( $sortKeyValue = "$sortKeyValue#$ctx.args.orderGameSessionId.lt.gameSessionId" ) #end
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey < :sortKey" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "order#gameSessionId"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$sortKeyValue" }))
#end
#if( !$util.isNull($ctx.args.orderGameSessionId) && !$util.isNull($ctx.args.orderGameSessionId.le) )
#if( !$util.isNull($ctx.args.orderGameSessionId.le.order) ) #set( $sortKeyValue = "$ctx.args.orderGameSessionId.le.order" ) #end
#if( !$util.isNull($ctx.args.orderGameSessionId.le.gameSessionId) ) #set( $sortKeyValue = "$sortKeyValue#$ctx.args.orderGameSessionId.le.gameSessionId" ) #end
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey <= :sortKey" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "order#gameSessionId"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$sortKeyValue" }))
#end
#if( !$util.isNull($ctx.args.orderGameSessionId) && !$util.isNull($ctx.args.orderGameSessionId.gt) )
#if( !$util.isNull($ctx.args.orderGameSessionId.gt.order) ) #set( $sortKeyValue = "$ctx.args.orderGameSessionId.gt.order" ) #end
#if( !$util.isNull($ctx.args.orderGameSessionId.gt.gameSessionId) ) #set( $sortKeyValue = "$sortKeyValue#$ctx.args.orderGameSessionId.gt.gameSessionId" ) #end
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey > :sortKey" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "order#gameSessionId"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$sortKeyValue" }))
#end
#if( !$util.isNull($ctx.args.orderGameSessionId) && !$util.isNull($ctx.args.orderGameSessionId.ge) )
#if( !$util.isNull($ctx.args.orderGameSessionId.ge.order) ) #set( $sortKeyValue = "$ctx.args.orderGameSessionId.ge.order" ) #end
#if( !$util.isNull($ctx.args.orderGameSessionId.ge.gameSessionId) ) #set( $sortKeyValue = "$sortKeyValue#$ctx.args.orderGameSessionId.ge.gameSessionId" ) #end
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey >= :sortKey" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "order#gameSessionId"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$sortKeyValue" }))
#end


## [End] Applying Key Condition **
## [End] Set query expression for key **
$util.qr($ctx.stash.put("modelQueryExpression", $modelQueryExpression))
{}