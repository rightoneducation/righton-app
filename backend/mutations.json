{
    "resolvers": [
        {
            "typeName": "Mutation",
            "fieldName": "createGame",
            "resolverArn": "arn:aws:appsync:us-east-1:484006752749:apis/mz6btgo62nhu5dcl67k5namuwe/types/Mutation/resolvers/createGame",
            "requestMappingTemplate": "## By default in a before template, all you need is a valid JSON payload.\n## You can also stash data to be made available to the functions in the pipeline.\n## Examples: \n## - $ctx.stash.put(\"email\", $ctx.args.email)\n## - $ctx.stash.put(\"badgeNumber\", $ctx.args.input.badgeNumber)\n## - $ctx.stash.put(\"username\", $ctx.identity.username)\n\n## Game\n#set( $cols = [] )\n#set( $vals = [] )\n\n## Question\n#set( $questionsCols = [] )\n#set( $questionsVals = [] )\n#set( $questionCurIdx = 0 )\n#set ( $questionsValStr = \"\" )\n\n#set ( $nowVarName = \":NOW\")\n\n## Game \n#foreach( $entry in $ctx.args.game.keySet() )\n\t#if ( $entry == \"questions\" )\n    \t#foreach( $question in $ctx.args.game[$entry] )\n          ## #set( $discard = $questionsVals.add([]) )\n          #set ( $questionsVals = [] )\n          #foreach( $questionEntry in $question.keySet() )\n          \t#if ( $questionCurIdx == 0 )\n              #set( $discard = $questionsCols.add($questionEntry) )\n            #end\n            ## #set( $discard = $questionsVals[$questionCurIdx].add(\"'$question[$questionEntry]'\") )\n            #set( $discard = $questionsVals.add(\"'$question[$questionEntry]'\") )\n          #end\n          ## #set( $discard = $questionsVals[$questionCurIdx].add(\"':NOW'\") )\n          ## #set( $discard = $questionsVals[$questionCurIdx].add(\"':NOW'\") )\n          #set( $discard = $questionsVals.add($nowVarName) )\n          #set( $discard = $questionsVals.add($nowVarName) )\n          \n          #if ( $questionCurIdx == 0 )\n          \t#set( $discard = $questionsCols.add(\"updated_at\") )\n          \t#set( $discard = $questionsCols.add(\"created_at\") )\n          #end\n          \n          #if($questionCurIdx != 0)\n          \t#set( $questionsValStr = \"$questionsValStr, \")\n          #end\n          #set( $sqlQuestionVals = $questionsVals.toString().replace(\"[\",\"(\").replace(\"]\",\")\") )\n          #set( $questionsValStr = \"$questionsValStr$sqlQuestionVals\" )\n          #set( $questionCurIdx = $questionCurIdx + 1 )\n        #end\n    #else\n    \t#set( $discard = $cols.add($entry) )\n  \t\t#set( $discard = $vals.add(\"'$ctx.args.game[$entry]'\") )\n    #end\n#end\n\n#set( $discard = $cols.add(\"updated_at\") )\n#set( $discard = $vals.add($nowVarName) )\n#set( $discard = $cols.add(\"created_at\") )\n#set( $discard = $vals.add($nowVarName) )\n#set( $valStr = $vals.toString().replace(\"[\",\"(\").replace(\"]\",\")\") )\n#set( $colStr = $cols.toString().replace(\"[\",\"(\").replace(\"]\",\")\") )\n$util.qr($ctx.stash.put(\"valStr\", $valStr))\n$util.qr($ctx.stash.put(\"colStr\", $colStr))\n\n## #set( $questionsValStr = $questionsVals.toString().replace(\"[\",\"(\").replace(\"]\",\")\") )\n#set( $questionsColStr = $questionsCols.toString().replace(\"[\",\"(\").replace(\"]\",\")\") )\n$util.qr($ctx.stash.put(\"questionsValStr\", $questionsValStr))\n$util.qr($ctx.stash.put(\"questionsColStr\", $questionsColStr))\n\n$util.qr($ctx.stash.put(\"now\", $util.toJson($util.time.nowISO8601())))\n\n{} ## Intentional",
            "responseMappingTemplate": "## The after mapping template is used to collect the final value that is returned by the resolver. \n$util.toJson($ctx.result)",
            "kind": "PIPELINE",
            "pipelineConfig": {
                "functions": [
                    "lbqdn54dpzemlllexxj27zc2u4",
                    "r4a2kkvv2na4bhwujvtgw2lpby",
                    "qap33ng4m5cmrcfptcd6fz72ti"
                ]
            }
        },
        {
            "typeName": "Mutation",
            "fieldName": "createQuestion",
            "resolverArn": "arn:aws:appsync:us-east-1:484006752749:apis/mz6btgo62nhu5dcl67k5namuwe/types/Mutation/resolvers/createQuestion",
            "requestMappingTemplate": "#set( $cols = [\"updated_at\", \"created_at\"] )\n#set( $vals = [\":NOW\", \":NOW\"] )\n#foreach( $entry in $ctx.args.question.keySet() )\n  #set( $discard = $cols.add($entry) )\n  #set( $discard = $vals.add(\"'$ctx.args.question[$entry]'\") )\n#end\n#set( $valStr = $vals.toString().replace(\"[\",\"(\").replace(\"]\",\")\") )\n#set( $colStr = $cols.toString().replace(\"[\",\"(\").replace(\"]\",\")\") )\n\n$util.qr($ctx.stash.put(\"colStr\", $colStr))\n$util.qr($ctx.stash.put(\"valStr\", $valStr))\n\n{} ## Intentional",
            "responseMappingTemplate": "## The after mapping template is used to collect the final value that is returned by the resolver. \n$util.toJson($ctx.result)",
            "kind": "PIPELINE",
            "pipelineConfig": {
                "functions": [
                    "h524rlkjyjgbfjtql2ysqlxcoq",
                    "gwxe6btrtra6xipi4emp4exvjm"
                ]
            }
        },
        {
            "typeName": "Mutation",
            "fieldName": "deleteGame",
            "dataSourceName": "WebRDSDev",
            "resolverArn": "arn:aws:appsync:us-east-1:484006752749:apis/mz6btgo62nhu5dcl67k5namuwe/types/Mutation/resolvers/deleteGame",
            "requestMappingTemplate": "{\n  \"version\": \"2018-05-29\",\n  \"statements\":   [\"SELECT * FROM Game WHERE id = :ID\", \"DELETE FROM Game WHERE id = :ID],\n  \"variableMap\": {\n  \t\":ID\": $util.toJson($ctx.args.id)\n  }\n}",
            "responseMappingTemplate": "#set( $output = $utils.rds.toJsonObject($ctx.result) )\n#if( $output.isEmpty() )\n  $util.error(\"Invalid response from RDS DataSource. See info for the full response.\", \"InvalidResponse\", {}, $output)\n#end\n#set( $output = $output[0] )\n#if( $output.isEmpty() )\n  #return\n#end\n$utils.toJson($output[0])",
            "kind": "UNIT"
        },
        {
            "typeName": "Mutation",
            "fieldName": "deleteQuestion",
            "dataSourceName": "WebRDSDev",
            "resolverArn": "arn:aws:appsync:us-east-1:484006752749:apis/mz6btgo62nhu5dcl67k5namuwe/types/Mutation/resolvers/deleteQuestion",
            "requestMappingTemplate": "{\n  \"version\": \"2018-05-29\",\n  \"statements\":   [\"SELECT * FROM Question WHERE id = :ID\", \"DELETE FROM Question WHERE id = :ID\"],\n  \"variableMap\": {\n  \t\":ID\": $util.toJson($ctx.args.id)\n  }\n}",
            "responseMappingTemplate": "#set( $output = $utils.rds.toJsonObject($ctx.result) )\n#if( $output.isEmpty() )\n  $util.error(\"Invalid response from RDS DataSource. See info for the full response.\", \"InvalidResponse\", {}, $output)\n#end\n#set( $output = $output[0] )\n#if( $output.isEmpty() )\n  #return\n#end\n$utils.toJson($output[0])",
            "kind": "UNIT"
        },
        {
            "typeName": "Mutation",
            "fieldName": "updateGame",
            "dataSourceName": "WebRDSDev",
            "resolverArn": "arn:aws:appsync:us-east-1:484006752749:apis/mz6btgo62nhu5dcl67k5namuwe/types/Mutation/resolvers/updateGame",
            "requestMappingTemplate": "#set( $updateList = {} )\n#foreach( $entry in $ctx.args.game.keySet() )\n  #set( $discard = $updateList.put($entry, \"'$ctx.args.game[$entry]'\") )\n#end\n#set( $update = $updateList.toString().replace(\"{\",\"\").replace(\"}\",\"\") )\n{\n  \"version\": \"2018-05-29\",\n  \"statements\": [\n  \t\"UPDATE games SET $update, updated_at = :NOW WHERE id = :ID\", \n    \"SELECT g.*, to_char(g.created_at, 'YYYY-MM-DD\\\"T\\\"HH24:MI:SS\\\"Z\\\"') AS created_date_time, to_char(g.updated_at, 'YYYY-MM-DD\\\"T\\\"HH24:MI:SS\\\"Z\\\"') AS updated_date_time, q.id AS question_id, q.text AS question_text, q.answer AS question_answer, q.image_url AS question_image_url, q.instructions AS question_instructions, to_char(q.created_at, 'YYYY-MM-DD\\\"T\\\"HH24:MI:SS\\\"Z\\\"') AS question_created_date_time, to_char(q.updated_at, 'YYYY-MM-DD\\\"T\\\"HH24:MI:SS\\\"Z\\\"') AS question_updated_date_time FROM games AS g INNER JOIN games_questions AS gq ON gq.game_id = g.id INNER JOIN questions AS q ON q.id = gq.question_id WHERE g.id = :ID\"\n  ],\n  \"variableMap\": {\n  \t\":ID\": $util.toJson($ctx.args.game.id),\n    \":NOW\": $util.toJson($util.time.nowISO8601())\n  }\n}",
            "responseMappingTemplate": "#set( $output = $utils.rds.toJsonObject($ctx.result) )\n#if( $output.length() < 2 )\n  $util.error(\"Invalid response from RDS DataSource. See info for the full response.\", \"InvalidResponse\", {}, $output)\n#end\n#set( $output = $output[1] )\n#if( $output.isEmpty() )\n  #return\n#end\n\n#set ( $game = $output[0] )\n\n#set ( $result = {\n\t\"id\": $game[\"id\"],\n\t\"title\": $game[\"title\"],\n    \"grade\": $game[\"grade\"],\n    \"domain\": $game[\"domain\"],\n    \"cluster\": $game[\"cluster\"],\n    \"description\": $game[\"description\"],\n    \"standard\": $game[\"standard\"],\n    \"updatedAt\": $game[\"updated_date_time\"],\n    \"createdAt\": $game[\"created_date_time\"],\n    \"questions\": []\n})\n#foreach( $gameQuestion in $output )\n\t#set( $question = {\n      \"id\": $gameQuestion[\"question_id\"],\n      \"instructions\": $gameQuestion[\"question_instructions\"],\n      \"text\": $gameQuestion[\"question_text\"],\n      \"answer\": $gameQuestion[\"question_answer\"],\n      \"imageUrl\": $gameQuestion[\"question_image_url\"],\n      \"updatedAt\": $gameQuestion[\"question_updated_date_time\"],\n      \"createdAt\": $gameQuestion[\"question_created_date_time\"]\n    } )\n    $util.qr($result.questions.add($question))\n#end\n$utils.toJson($result)",
            "kind": "UNIT"
        },
        {
            "typeName": "Mutation",
            "fieldName": "updateQuestion",
            "dataSourceName": "WebRDSDev",
            "resolverArn": "arn:aws:appsync:us-east-1:484006752749:apis/mz6btgo62nhu5dcl67k5namuwe/types/Mutation/resolvers/updateQuestion",
            "requestMappingTemplate": "#set( $updateList = {} )\n#set( $instructions = \"\")\n#foreach( $entry in $ctx.args.question.keySet() )\n  #if( $entry == \"instructions\" )\n  \t#set( $instructions = \"$entry = '$utils.escapeJavaScript($utils.toJson($ctx.args.question[$entry]))', \" )\n  #else\n  \t#set( $discard = $updateList.put($entry, \"'$ctx.args.question[$entry]'\") )\n  #end\n#end\n#set( $update = $updateList.toString().replace(\"{\",\"\").replace(\"}\",\"\").replace(\"imageUrl\", \"image_url\") )\n{\n  \"version\": \"2018-05-29\",\n  \"statements\":   [\n  \t\"UPDATE questions SET $update, $instructions updated_at = :NOW WHERE id = :ID\", \n    \"SELECT *, to_char(created_at, 'YYYY-MM-DD\\\"T\\\"HH24:MI:SS\\\"Z\\\"') AS created_date_time, to_char(updated_at, 'YYYY-MM-DD\\\"T\\\"HH24:MI:SS\\\"Z\\\"') AS updated_date_time FROM questions WHERE id = :ID\"\n  ],\n  \"variableMap\": {\n  \t\":ID\": $util.toJson($ctx.args.question.id),\n    \":NOW\": $util.toJson($util.time.nowISO8601())\n  }\n}",
            "responseMappingTemplate": "#set( $output = $utils.rds.toJsonObject($ctx.result) )\n#if( $output.length() < 2 )\n  $util.error(\"Invalid response from RDS DataSource. See info for the full response.\", \"InvalidResponse\", {}, $output)\n#end\n#set( $output = $output[1] )\n#if( $output.isEmpty() )\n  #return\n#end\n#set( $output = $output[0])\n\n#set( $result = {\n\t\"id\": $output[\"id\"],\n    \"instructions\": $output[\"instructions\"],\n    \"text\": $output[\"text\"],\n    \"answer\": $output[\"answer\"],\n    \"imageUrl\": $output[\"image_url\"],\n    \"updatedAt\": $output[\"updated_date_time\"],\n    \"createdAt\": $output[\"created_date_time\"]\n})\n\n$util.toJson($result)",
            "kind": "UNIT"
        }
    ]
}
